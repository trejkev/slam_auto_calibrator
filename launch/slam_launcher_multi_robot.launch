<launch>
  <arg name="first_tb3"  default="tb3_0"/>
  <arg name="second_tb3" default="tb3_1"/>
  <arg name="third_tb3"  default="tb3_2"/>
  <arg name="open_rviz"  default="true" />

  <arg name="tb3_0_x_pos" default="-2.5" />
  <arg name="tb3_0_y_pos" default="3.0"  />
  <arg name="tb3_0_z_pos" default="0.0"  />
  <arg name="tb3_0_yaw"   default="1.57" />

  <arg name="tb3_1_x_pos" default="1.0"  />
  <arg name="tb3_1_y_pos" default="0.0"  />
  <arg name="tb3_1_z_pos" default="0.0"  />
  <arg name="tb3_1_yaw"   default="1.57" />

  <arg name="tb3_2_x_pos" default="0.0"  />
  <arg name="tb3_2_y_pos" default="-1.0" />
  <arg name="tb3_2_z_pos" default="0.0"  />
  <arg name="tb3_2_yaw"   default="0.3"  />

  <group ns = "$(arg first_tb3)">
    <!-- Arguments -->
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"           />
    <arg name="set_base_frame"         default="$(arg first_tb3)/base_footprint" />
    <arg name="set_odom_frame"         default="$(arg first_tb3)/odom"           />
    <arg name="set_map_frame"          default="$(arg first_tb3)/map"            />

    <!-- Gmapping -->
    <node pkg="gmapping" type="slam_gmapping" name="turtlebot3_slam_gmapping" output="screen">
        <param name="base_frame" value="$(arg set_base_frame)" />
        <param name="odom_frame" value="$(arg set_odom_frame)" />
        <param name="map_frame"  value="$(arg set_map_frame)"  />
        <param name="tf_prefix"  value="$(arg first_tb3)"      />
        <rosparam command="load" file="$(find turtlebot3_slam)/config/gmapping_params.yaml" />
    </node>

    <!-- Automatic navigation node -->
    <include file="$(find turtlebot3_nav)/launch/speed_controller.launch">
        <arg name="Coordinates_Dictionary" value="$(arg first_tb3)"   />
        <arg name="Odometry_Topic"         value="odom"               />
        <arg name="Velocity_Topic"         value="cmd_vel"            />
        <arg name="x_position"             value="$(arg tb3_0_x_pos)" />
        <arg name="y_position"             value="$(arg tb3_0_y_pos)" />
        <arg name="z_rotation"             value="$(arg tb3_0_yaw)"   />
    </include>

    <!-- Calling the node to publish the ground truth pose of the TurtleBot3 -->
    <include file="$(find tb3_pose_publisher)/launch/tb3_pose_publisher.launch">
        <arg name="robot_name" value="$(arg first_tb3)"/>
    </include>

    <!-- Calling the node to publish the APE metric of the TurtleBot3 -->
    <include file="$(find slam_auto_calibrator)/launch/ape_launcher.launch">
        <arg name="robot_name" value="$(arg first_tb3)"/>
    </include>

  </group>

  <group ns = "$(arg second_tb3)">
    <!-- Arguments -->
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"            />
    <arg name="set_base_frame"         default="$(arg second_tb3)/base_footprint" />
    <arg name="set_odom_frame"         default="$(arg second_tb3)/odom"           />
    <arg name="set_map_frame"          default="$(arg second_tb3)/map"            />

    <!-- Gmapping -->
    <node pkg="gmapping" type="slam_gmapping" name="turtlebot3_slam_gmapping" output="screen">
        <param name="base_frame" value="$(arg set_base_frame)" />
        <param name="odom_frame" value="$(arg set_odom_frame)" />
        <param name="map_frame"  value="$(arg set_map_frame)"  />
        <param name="tf_prefix" value="$(arg second_tb3)"      />
        <rosparam command="load" file="$(find turtlebot3_slam)/config/gmapping_params.yaml" />
    </node>

    <!-- Automatic navigation node -->
    <include file="$(find turtlebot3_nav)/launch/speed_controller.launch">
        <arg name="Coordinates_Dictionary" value="$(arg second_tb3)"  />
        <arg name="Odometry_Topic"         value="odom"               />
        <arg name="Velocity_Topic"         value="cmd_vel"            />
        <arg name="x_position"             value="$(arg tb3_1_x_pos)" />
        <arg name="y_position"             value="$(arg tb3_1_y_pos)" />
        <arg name="z_rotation"             value="$(arg tb3_1_yaw)"   />
    </include>

    <!-- Calling the node to publish the ground truth pose of the TurtleBot3 -->
    <include file="$(find tb3_pose_publisher)/launch/tb3_pose_publisher.launch">
        <arg name="robot_name" value="$(arg second_tb3)"/>
    </include>

    <!-- Calling the node to publish the APE metric of the TurtleBot3 -->
    <include file="$(find slam_auto_calibrator)/launch/ape_launcher.launch">
        <arg name="robot_name" value="$(arg second_tb3)"/>
    </include>

  </group>

  <group ns = "$(arg third_tb3)">
    <!-- Arguments -->
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"           />
    <arg name="set_base_frame"         default="$(arg third_tb3)/base_footprint" />
    <arg name="set_odom_frame"         default="$(arg third_tb3)/odom"           />
    <arg name="set_map_frame"          default="$(arg third_tb3)/map"            />

    <!-- Gmapping -->
    <node pkg="gmapping" type="slam_gmapping" name="turtlebot3_slam_gmapping" output="screen">
        <param name="base_frame" value="$(arg set_base_frame)" />
        <param name="odom_frame" value="$(arg set_odom_frame)" />
        <param name="map_frame"  value="$(arg set_map_frame)"  />
        <param name="tf_prefix"  value="$(arg third_tb3)"      />
        <rosparam command="load" file="$(find turtlebot3_slam)/config/gmapping_params.yaml" />
    </node>

    <!-- Automatic navigation node -->
    <include file="$(find turtlebot3_nav)/launch/speed_controller.launch">
        <arg name="Coordinates_Dictionary" value="$(arg third_tb3)"   />
        <arg name="Odometry_Topic"         value="odom"               />
        <arg name="Velocity_Topic"         value="cmd_vel"            />
        <arg name="x_position"             value="$(arg tb3_2_x_pos)" />
        <arg name="y_position"             value="$(arg tb3_2_y_pos)" />
        <arg name="z_rotation"             value="$(arg tb3_2_yaw)"   />
    </include>

    <!-- Calling the node to publish the ground truth pose of the TurtleBot3 -->
    <include file="$(find tb3_pose_publisher)/launch/tb3_pose_publisher.launch">
        <arg name="robot_name" value="$(arg third_tb3)"/>
    </include>

    <!-- Calling the node to publish the APE metric of the TurtleBot3 -->
    <include file="$(find slam_auto_calibrator)/launch/ape_launcher.launch">
        <arg name="robot_name" value="$(arg third_tb3)"/>
    </include>

  </group>

  <include file="$(find turtlebot3_gazebo)/launch/multi_map_merge.launch"></include>

  <!-- rviz -->
  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find turtlebot3_gazebo)/rviz/multi_turtlebot3_slam.rviz"/>
  </group>
</launch>